# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from telegram import Update, ForceReply
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
START, GET_FIN_TIPS = range(2)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, _: CallbackContext) -> int:
    user = update.effective_user
    update.message.reply_markdown_v2(
        fr'–ü—Ä–∏–≤–µ—Ç, {user.mention_markdown_v2()}! üëã'
        fr'–Ø –±–æ—Ç –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏. '
        fr'–û—Ç–ø—Ä–∞–≤—å—Ç–µ /get_tips, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º.'
    )

    return START

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /get_tips
def get_tips(update: Update, _: CallbackContext) -> int:
    update.message.reply_text("–ó–¥–µ—Å—å –±—É–¥—É—Ç —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è.")
    return GET_FIN_TIPS

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def handle_text(update: Update, _: CallbackContext) -> int:
    text = update.message.text.lower()
    if text == '–ø–æ–∫–∞':
        update.message.reply_text("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ï—Å–ª–∏ —É –≤–∞—Å –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º, –ø–∏—à–∏—Ç–µ.")
        return ConversationHandler.END
    else:
        update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–∞–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã.")
        return GET_FIN_TIPS

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤–∞—à —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather
    token = "YOUR_BOT_TOKEN"
    updater = Updater(token)

    dispatcher = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            START: [CommandHandler('get_tips', get_tips)],
            GET_FIN_TIPS: [MessageHandler(Filters.text & ~Filters.command, handle_text)],
        },
        fallbacks=[],
    )

    dispatcher.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()

